---
# Source: manuela-stormshift/templates/line-dashboard/line-dashboard-configmap.config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: line-dashboard-configmap
  namespace: manuela-stormshift-line-dashboard
  labels:
    app.kubernetes.io/instance: manuela-stormshift
data:
  "config.json": |-
    {
      "websocketHost": "http://messaging-manuela-stormshift-messaging.local.example.com",
      "websocketPath": "/api/service-web/socket",
      "SERVER_TIMEOUT": "20000"
    }
---
# Source: manuela-stormshift/templates/machine-sensor/machine-sensor-1-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: machine-sensor-1
  namespace: manuela-stormshift-machine-sensor
data:
  MQTT_HOSTNAME: "broker-amq-mqtt-all-0-svc-rte-manuela-stormshift-messaging.local.example.com"
  MQTT_PORT: "80"
  APP_NAME: "iot-sensor"
  DEVICE_ID: "pump-1"
  DEVICE_METRICS: "temperature,vibration,gps,light"
  MACHINE_ID: "floor-1-line-1-extruder-1"

  MQTT_PASSWORD: "iotuser"
  MQTT_TLSSNI: "false"
  MQTT_USER: "iotuser"

  SENSOR_GPS_ENABLED: "false"
  SENSOR_GPS_FINAL_LATITUDE: "40.689879"
  SENSOR_GPS_FINAL_LONGITUDE: "-73.992895"
  SENSOR_GPS_FREQUENCY: "5"
  SENSOR_GPS_INITIAL_LATITUDE: "42.579258"
  SENSOR_GPS_INITIAL_LONGITUDE: "-71.437841"
  SENSOR_GPS_ITERATION_LATITUDE: "-0.009"
  SENSOR_GPS_ITERATION_LONGITUDE: "-0.012"

  SENSOR_LIGHT_ENABLED: "false"
  SENSOR_LIGHT_FREQUENCY: "5"
  SENSOR_LIGHT_MAXITERATION: "3"
  SENSOR_LIGHT_MAXRANGE: "25000"
  SENSOR_LIGHT_MINITERATION: "0"
  SENSOR_LIGHT_MINRANGE: "0"
  SENSOR_LIGHT_START: "0"

  SENSOR_TEMPERATURE_ENABLED: "false"
  SENSOR_TEMPERATURE_FREQUENCY: "5"
  SENSOR_TEMPERATURE_MAXITERATION: "1"
  SENSOR_TEMPERATURE_MAXRANGE: "55"
  SENSOR_TEMPERATURE_MINITERATION: "0"
  SENSOR_TEMPERATURE_MINRANGE: "45"
  SENSOR_TEMPERATURE_STARTMAX: "50"
  SENSOR_TEMPERATURE_STARTMIN: "50"

  SENSOR_VIBRATION_ENABLED: "true"
  SENSOR_VIBRATION_FREQUENC: "5"
  SENSOR_VIBRATION_MAXITERATION: "1"
  SENSOR_VIBRATION_MAXRANGE: "18"
  SENSOR_VIBRATION_MINITERATION: "0"
  SENSOR_VIBRATION_MINRANGE: "10"
  SENSOR_VIBRATION_START: "15"
  SENSOR_VIBRATION_PEAKINTETVAL: "20"
---
# Source: manuela-stormshift/templates/machine-sensor/machine-sensor-2-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: machine-sensor-2
  namespace: manuela-stormshift-machine-sensor
data:
    MQTT_HOSTNAME: "broker-amq-mqtt-all-0-svc-rte-manuela-stormshift-messaging.local.example.com"
    MQTT_PORT: "80"
    APP_NAME: "iot-sensor"
    DEVICE_ID: "pump-2"
    DEVICE_METRICS: "temperature,vibration,gps,light"
    MACHINE_ID: "floor-1-line-1-extruder-1"

    MQTT_PASSWORD: "iotuser"
    MQTT_TLSSNI: "false"
    MQTT_USER: "iotuser"

    SENSOR_GPS_ENABLED: "false"
    SENSOR_GPS_FINAL_LATITUDE: "40.689879"
    SENSOR_GPS_FINAL_LONGITUDE: "-73.992895"
    SENSOR_GPS_FREQUENCY: "5"
    SENSOR_GPS_INITIAL_LATITUDE: "42.579258"
    SENSOR_GPS_INITIAL_LONGITUDE: "-71.437841"
    SENSOR_GPS_ITERATION_LATITUDE: "-0.009"
    SENSOR_GPS_ITERATION_LONGITUDE: "-0.012"

    SENSOR_LIGHT_ENABLED: "false"
    SENSOR_LIGHT_FREQUENCY: "5"
    SENSOR_LIGHT_MAXITERATION: "3"
    SENSOR_LIGHT_MAXRANGE: "25000"
    SENSOR_LIGHT_MINITERATION: "0"
    SENSOR_LIGHT_MINRANGE: "0"
    SENSOR_LIGHT_START: "0"

    SENSOR_TEMPERATURE_ENABLED: "false"
    SENSOR_TEMPERATURE_FREQUENCY: "5"
    SENSOR_TEMPERATURE_MAXITERATION: "1"
    SENSOR_TEMPERATURE_MAXRANGE: "55"
    SENSOR_TEMPERATURE_MINITERATION: "0"
    SENSOR_TEMPERATURE_MINRANGE: "45"
    SENSOR_TEMPERATURE_STARTMAX: "50"
    SENSOR_TEMPERATURE_STARTMIN: "50"

    SENSOR_VIBRATION_ENABLED: "true"
    SENSOR_VIBRATION_FREQUENC: "5"
    SENSOR_VIBRATION_MAXITERATION: "1"
    SENSOR_VIBRATION_MAXRANGE: "17"
    SENSOR_VIBRATION_MINITERATION: "0"
    SENSOR_VIBRATION_MINRANGE: "10"
    SENSOR_VIBRATION_START: "12"
    SENSOR_VIBRATION_PEAKINTETVAL: "200"
---
# Source: manuela-stormshift/templates/messaging-kafka/mqtt2kafka-config.yaml
kind: ConfigMap
apiVersion: v1
metadata:
  name: mqtt2kafka-config
  namespace: manuela-stormshift-messaging
# DO NOT DELETE. NEEDED BY THE mqtt2kafka-integration SERVICE
---
# Source: manuela-stormshift/templates/messaging/messaging-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: messaging-configmap
  namespace: manuela-stormshift-messaging
data:
  VIBRATION_ALERT_ENABLED: "true"
  VIBRATION_ANOMALY_ENABLED: "true"
  NODE_TLS_REJECT_UNAUTHORIZED: "0"
  MQTT_BROKER: "ws://broker-amq-mqtt-all-0-svc:61616"
  MQTT_PASSWORD: "iotuser"
  MQTT_USER: "iotuser"
  PORT: "3000"
  SOCKET_PATH: "/api/service-web/socket"
  TEMPERATURE_THRESHOLD: "70.0"
  TEMPERATURE_ALERT_ENABLED: "true"
  TOPIC_GPS: "iot-sensor/sw/gps"
  TOPIC_TEMPERATURE: "iot-sensor/sw/temperature"
  TOPIC_VIBRATION: "iot-sensor/sw/vibration"
  TOPIC_LIGHT: "iot-sensor/sw/light"
  ANOMALY_DETECTION_URL: "http://anomaly-detection-predictor:8000"
---
# Source: manuela-stormshift/templates/line-dashboard/line-dashboard-svc.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: line-dashboard
  name: line-dashboard
  namespace: manuela-stormshift-line-dashboard
spec:
  ports:
  - name: 8080-tcp
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: line-dashboard
    deploymentconfig: line-dashboard
  sessionAffinity: None
  type: ClusterIP
---
# Source: manuela-stormshift/templates/messaging/messaging-svc.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: messaging
  name: messaging
  namespace: manuela-stormshift-messaging
spec:
  ports:
  - name: 3000-tcp
    port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: messaging
    deploymentconfig: messaging
  sessionAffinity: None
  type: ClusterIP
---
# Source: manuela-stormshift/templates/line-dashboard/line-dashboard-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    application: line-dashboard
    template: openjdk18-web-basic-s2i
    app.kubernetes.io/part-of: ManuELA
  name: line-dashboard
  namespace: manuela-stormshift-line-dashboard
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      deploymentconfig: line-dashboard
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: line-dashboard
        deploymentconfig: line-dashboard
      name: line-dashboard
    spec:
      containers:
      - name: line-dashboard
        image: image-registry.openshift-image-registry.svc:5000/manuela-stormshift-line-dashboard/line-dashboard:0.3.1
        #imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        volumeMounts:
        # the following mountpath is used for images which are based on the HTTPD base images, i.e. built using the CI/CD pipelines
        - mountPath: /var/www/html/conf
          name: line-dashboard-configmap-vol
        # the following mountpath is used for images based directly on the NodeJS builder image, i.e. when deploying images built in the iotdemo namespace during quickstart
        - mountPath: /opt/app-root/output/conf/config.json
          name: line-dashboard-configmap-vol
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        livenessProbe:
          httpGet:
            path: /home
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 15
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /home
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 15
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
      volumes:
      - name: line-dashboard-configmap-vol
        configMap:
          defaultMode: 438
          name: line-dashboard-configmap
---
# Source: manuela-stormshift/templates/machine-sensor/machine-sensor-1-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    application: machine-sensor-1
    template: openjdk18-web-basic-s2i
    app.kubernetes.io/part-of: ManuELA
  name: machine-sensor-1
  namespace: manuela-stormshift-machine-sensor
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      deploymentConfig: machine-sensor-1
  template:
    metadata:
      creationTimestamp: null
      annotations:
        checksum/config: 895c15dfcefd9bd3aee00706aa1dbc6fc8a2a583b58e7b3f5fdf946be8be0325
      labels:
        application: machine-sensor-1
        deploymentConfig: machine-sensor-1
      name: machine-sensor-1
    spec:
      containers:
      - name: machine-sensor
        image: image-registry.openshift-image-registry.svc:5000/manuela-stormshift-machine-sensor/machine-sensor:0.3.1
        imagePullPolicy: Always
        ports:
          - containerPort: 8778
            name: jolokia
            protocol: TCP
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 8443
            name: https
            protocol: TCP
        envFrom:
          - configMapRef:
              name: machine-sensor-1
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 15
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 15
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
---
# Source: manuela-stormshift/templates/machine-sensor/machine-sensor-2-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    application: machine-sensor-2
    template: openjdk18-web-basic-s2i
    app.kubernetes.io/part-of: ManuELA
  name: machine-sensor-2
  namespace: manuela-stormshift-machine-sensor
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      deploymentConfig: machine-sensor-2
  template:
    metadata:
      creationTimestamp: null
      annotations:
        checksum/config: 1f17f0cd9e3d69dd8fe45d0eab883eefe797cb5ec0b30f856e47298761561fb4
      labels:
        application: machine-sensor-2
        deploymentConfig: machine-sensor-2
      name: machine-sensor-2
    spec:
      containers:
      - name: machine-sensor
        image: image-registry.openshift-image-registry.svc:5000/manuela-stormshift-machine-sensor/machine-sensor:0.3.1
        imagePullPolicy: Always
        ports:
          - containerPort: 8778
            name: jolokia
            protocol: TCP
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 8443
            name: https
            protocol: TCP
        envFrom:
          - configMapRef:
              name: machine-sensor-2
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 15
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 15
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
---
# Source: manuela-stormshift/templates/messaging/messaging-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    application: messaging
  name: messaging
  namespace: manuela-stormshift-messaging
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: messaging
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: messaging
        deploymentconfig: messaging
    spec:
      containers:
      - image: image-registry.openshift-image-registry.svc:5000/manuela-stormshift-messaging/messaging:0.3.2
        imagePullPolicy: Always
        name: messaging
        ports:
        - containerPort: 3000
          protocol: TCP
        envFrom:
        - configMapRef:
            name: messaging-configmap
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 15
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 15
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
# Source: manuela-stormshift/templates/factory-mirror-maker/factory-to-central-mirror-maker2.yaml
#apiVersion: kafka.strimzi.io/v1beta2
#kind: KafkaMirrorMaker2
#metadata:
#  name: factory-to-central-mm2
#  namespace: manuela-stormshift-messaging
#spec:
#  version: 3.1.0
#  replicas: 1
#  connectCluster: production-kafka-cluster
#  clusters:
#    - alias: production-kafka-cluster
#      bootstrapServers: 'bootstrap-manuela-data-lake-kafka-cluster.hub.example.com:443'
#      #bootstrapServers: 'bootstrap-manuela-data-lake-kafka-cluster.apps.industrial-factory-1.blueprints.rhecoeng.com:443'
#      #
#      # TODO: This is a secret that we will need to create in the manuela-stormshift-messaging namespace
#      #
#      tls:
#        trustedCertificates:
#        - certificate: ca.crt
#          secretName: prod-kafka-cluster-cluster-ca-cert
#    - alias: factory-kafka-cluster
#      bootstrapServers: 'factory-kafka-cluster-kafka-bootstrap.manuela-stormshift-messaging.svc:9092'
#      config:
#        config.storage.replication.factor: 1
#        offset.storage.replication.factor: 1
#        status.storage.replication.factor: 1
#  mirrors:
#    - sourceCluster: factory-kafka-cluster
#      targetCluster: production-kafka-cluster
#      sourceConnector:
#        config:
#          replication.factor: 1
#          offset-syncs.topic.replication.factor: 1
#          sync.topic.acls.enabled: 'false'
#      heartbeatConnector:
#        config:
#          heartbeats.topic.replication.factor: 1
#      checkpointConnector:
#        config:
#          checkpoints.topic.replication.factor: 1
#      topicsPattern: .*
#      groupsPattern: .*
---
# Source: manuela-stormshift/templates/messaging/amq-broker.yaml
apiVersion: broker.amq.io/v2alpha4
kind: ActiveMQArtemis
metadata:
  name: broker-amq-mqtt
  namespace: manuela-stormshift-messaging
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  deploymentPlan:
    size: 1
    image: registry.redhat.io/amq7/amq-broker:7.6
    # requireLogin: false
    # persistenceEnabled: false
    journalType: nio
    messageMigration: false
  console:
    expose: true
  acceptors:
    - name: all
      port: 61616
      expose: true
    # - name: amqp
    #   protocols: amqp
    #   port: 5672
    #   sslEnabled: true
    #   enabledCipherSuites: SSL_RSA_WITH_RC4_128_SHA,SSL_DH_anon_WITH_3DES_EDE_CBC_SHA
    #   enabledProtocols: TLSv1,TLSv1.1,TLSv1.2
    #   needClientAuth: true
    #   wantClientAuth: true
    #   verifyHost: true
    #   sslProvider: JDK
    #   sniHost: localhost
    #   expose: true
    #   anycastPrefix: jms.topic.
    #   multicastPrefix: /queue/
    # - name: mqtt
    #   protocols: mqtt
    #   port: 1883
    #   # sslEnabled: true
    #   enabledCipherSuites: SSL_RSA_WITH_RC4_128_SHA,SSL_DH_anon_WITH_3DES_EDE_CBC_SHA
    #   enabledProtocols: TLSv1,TLSv1.1,TLSv1.2
    #   needClientAuth: true
    #   wantClientAuth: true
    #   verifyHost: true
    #   sslProvider: JDK
    #   sniHost: broker-amq-mqtt
    #   expose: true
    #   anycastPrefix: jms.topic.
    #   multicastPrefix: /queue/
---
# Source: manuela-stormshift/templates/anomaly-detection/anomaly-detection-is.yaml
apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  labels:
    application: anomaly-detection
  name: anomaly-detection
  namespace: manuela-stormshift-messaging
spec:
  lookupPolicy:
    local: false
  tags:
  - name: 0.3.2
    from:
      kind: DockerImage
      name: quay.io/hybridcloudpatterns/iot-anomaly-detection:0.3.2
    importPolicy: {}
    referencePolicy:
      type: Local
---
# Source: manuela-stormshift/templates/line-dashboard/line-dashboard-is.yaml
apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  name: line-dashboard
  namespace: manuela-stormshift-line-dashboard
spec:
  lookupPolicy:
    local: true
  tags:
  - name: "0.3.1"
    from:
      kind: DockerImage
      name: quay.io/hybridcloudpatterns/iot-frontend:0.3.1
    importPolicy: {}
    referencePolicy:
      type: Local
---
# Source: manuela-stormshift/templates/machine-sensor/machine-sensor-is.yaml
apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  name: machine-sensor
  namespace: manuela-stormshift-machine-sensor
spec:
  lookupPolicy:
    local: true
  tags:
  - name: "0.3.1"
    from:
      kind: DockerImage
      name: quay.io/hybridcloudpatterns/iot-software-sensor:0.3.1
    importPolicy: {}
    referencePolicy:
      type: Local
---
# Source: manuela-stormshift/templates/messaging/messaging-is.yaml
apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  name: messaging
  namespace: manuela-stormshift-messaging
spec:
  lookupPolicy:
    local: true
  tags:
  - name: "0.3.2"
    from:
      kind: DockerImage
      name: quay.io/hybridcloudpatterns/iot-consumer:0.3.2
    importPolicy: {}
    referencePolicy:
      type: Local
---
# Source: manuela-stormshift/templates/messaging-kafka/mqtt2kafka-integration.yaml
apiVersion: camel.apache.org/v1
kind: Integration
metadata:
  name: mqtt2kafka-integration
  namespace: manuela-stormshift-messaging
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  configuration:
    - type: configmap
      value: mqtt2kafka-config
  profile: OpenShift
  sources:
    - content: |
        package com.redhat.manuela.routes;

        import org.apache.camel.builder.RouteBuilder;
        import org.apache.camel.component.kafka.KafkaConstants;
        import org.apache.camel.model.OnCompletionDefinition;
        import org.slf4j.Logger;
        import org.slf4j.LoggerFactory;


        public class MQTT2KafkaRoute extends RouteBuilder {

            private static final Logger LOGGER = LoggerFactory.getLogger(MQTT2KafkaRoute.class);

            @Override
            public void configure() throws Exception {
                storeTemperatureInKafka();
                storeVibrationInKafka();
                //readTemperatureFromKafka();
                //readVibrationFromKafka();
            }

            private void storeTemperatureInKafka() {
                // This block is to extract the cluster name from our VP
                // localClusterDomain setting. Please see the config map.
                String temp = "local.example.com";
                String delims="[ . ]+";
                String [] tokens = temp.split(delims);
                String cluster_name = tokens[1];

                from("paho:iot-sensor/sw/temperature?brokerUrl=tcp://broker-amq-mqtt-all-0-svc:61616&clientId=MQTT2KafkaRoute-temp")
                    .log("Storing temperature message from [" + cluster_name + "] MQTT: ${body}")
                    .setHeader(KafkaConstants.KEY, constant(cluster_name))
                    //.setHeader(KafkaConstants.KEY, constant("sensor-temp"))
                    .to("kafka:manuela-factory.iot-sensor-sw-temperature?brokers=factory-kafka-cluster-kafka-bootstrap:9092")
                    ;//.log("sent message: ${headers[org.apache.kafka.clients.producer.RecordMetadata]}");
            }

            private void storeVibrationInKafka() {
                // This block is to extract the cluster name from our VP
                // localClusterDomain setting. Please see the config map.
                String temp = "local.example.com";
                String delims="[ . ]+";
                String [] tokens = temp.split(delims);
                String cluster_name = tokens[1];

                from("paho:iot-sensor/sw/vibration?brokerUrl=tcp://broker-amq-mqtt-all-0-svc:61616&clientId=MQTT2KafkaRoute-vibr")
                    .log("Storing vibration message from [" + cluster_name + "] MQTT: ${body}")
                    .setHeader(KafkaConstants.KEY, constant(cluster_name))
                    // .setHeader(KafkaConstants.KEY, constant("sensor-temp"))
                    .to("kafka:manuela-factory.iot-sensor-sw-vibration?brokers=factory-kafka-cluster-kafka-bootstrap:9092")
                    ;//.log("sent message: ${headers[org.apache.kafka.clients.producer.RecordMetadata]}");
            }

            private void readTemperatureFromKafka() {
                from("kafka:manuela-factory.iot-sensor-sw-temperature?brokers=factory-kafka-cluster-kafka-bootstrap:9092")
                    .log("Reading message from Kafka: ${body}")
                    .log("    on the topic ${headers[kafka.TOPIC]}")
                    .log("    on the partition ${headers[kafka.PARTITION]}")
                    .log("    with the offset ${headers[kafka.OFFSET]}")
                    .log("    with the key ${headers[kafka.KEY]}");
            }

            private void readVibrationFromKafka() {
                from("kafka:manuela-factory.iot-sensor-sw-vibration?brokers=factory-kafka-cluster-kafka-bootstrap:9092")
                    .log("Reading message from Kafka: ${body}")
                    .log("    on the topic ${headers[kafka.TOPIC]}")
                    .log("    on the partition ${headers[kafka.PARTITION]}")
                    .log("    with the offset ${headers[kafka.OFFSET]}")
                    .log("    with the key ${headers[kafka.KEY]}");
            }

            @Override
            public OnCompletionDefinition onCompletion() {
                return super.onCompletion();
            }
        }
      name: MQTT2KafkaRoute.java
---
# Source: manuela-stormshift/templates/messaging-kafka/camel-k-integration-platform.yaml
apiVersion: camel.apache.org/v1
kind: IntegrationPlatform
metadata:
  name: camel-k
  namespace: manuela-stormshift-messaging
  labels:
    app: "camel-k"
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  configuration:
  - type: repository
    value: https://maven.repository.redhat.com/earlyaccess/all@id=redhat.ea
---
# Source: manuela-stormshift/templates/messaging-kafka/kafka-cluster.yaml
apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: factory-kafka-cluster
  namespace: manuela-stormshift-messaging
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  kafka:
    replicas: 3
    listeners:
      - name: plain
        port: 9092
        type: internal
        tls: false
      - name: tls
        port: 9093
        type: internal
        tls: true
      - name: external
        port: 9094
        type: route
        tls: true
        configuration:
          bootstrap:
            host: bootstrap-factory-kafka-cluster.local.example.com
    config:
      offsets.topic.replication.factor: 3
      transaction.state.log.min.isr: 2
      transaction.state.log.replication.factor: 3
    storage:
      type: ephemeral
  zookeeper:
    replicas: 3
    storage:
      type: ephemeral
  entityOperator:
    topicOperator: {}
    userOperator: {}
---
# Source: manuela-stormshift/templates/factory-mirror-maker/factory-mirror-maker.yaml
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaMirrorMaker
metadata:
  name: factory-to-central-mm
  namespace: manuela-stormshift-messaging
spec:
  consumer:
    bootstrapServers: >-
      factory-kafka-cluster-kafka-bootstrap.manuela-stormshift-messaging.svc:9092
    groupId: my-source-group-id
  include: .*
  livenessProbe:
    failureThreshold: 2
    initialDelaySeconds: 1
    periodSeconds: 1
    successThreshold: 1
    timeoutSeconds: 2
  producer:
    bootstrapServers: >-
      prod-kafka-cluster-kafka-bootstrap-manuela-data-lake.hub.example.com:443
    tls:
      trustedCertificates:
        - certificate: ca.crt
          secretName: prod-kafka-cluster-cluster-ca-cert
  readinessProbe:
    failureThreshold: 2
    initialDelaySeconds: 0
    periodSeconds: 1
    successThreshold: 2
    timeoutSeconds: 2
  replicas: 1
  version: 3.1.0
---
# Source: manuela-stormshift/templates/messaging-kafka/kafka-topic-temperature.yaml
apiVersion: kafka.strimzi.io/v1beta1
kind: KafkaTopic
metadata:
  name: iot-sensor-sw-temperature
  namespace: manuela-stormshift-messaging
  labels:
    strimzi.io/cluster: factory-kafka-cluster
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  partitions: 1
  replicas: 1
  config:
    retention.ms: 7200000
    segment.bytes: 1073741824
---
# Source: manuela-stormshift/templates/messaging-kafka/kafka-topic-vibration.yaml
apiVersion: kafka.strimzi.io/v1beta1
kind: KafkaTopic
metadata:
  name: iot-sensor-sw-vibration
  namespace: manuela-stormshift-messaging
  labels:
    strimzi.io/cluster: factory-kafka-cluster
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  partitions: 1
  replicas: 1
  config:
    retention.ms: 7200000
    segment.bytes: 1073741824
---
# Source: manuela-stormshift/templates/anomaly-detection/iot-anomaly-detection-route.yaml
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: anomaly-detection
  namespace: manuela-stormshift-messaging
  labels:
    component: serving
spec:
  port:
    targetPort: http
  to:
    kind: Service
    name: anomaly-detection-predictor-anomaly-detection
  tls:
    insecureEdgeTerminationPolicy: Allow
    termination: edge
---
# Source: manuela-stormshift/templates/line-dashboard/line-dashboard-route.yaml
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    app: line-dashboard
  name: line-dashboard
  namespace: manuela-stormshift-line-dashboard
spec:
  subdomain: line-dashboard-manuela-stormshift-line-dashboard
  port:
    targetPort: 8080-tcp
  to:
    kind: Service
    name: line-dashboard
    weight: 100
  wildcardPolicy: None
---
# Source: manuela-stormshift/templates/messaging/messaging-route.yaml
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: messaging
  namespace: manuela-stormshift-messaging
spec:
  subdomain: messaging-manuela-stormshift-messaging
  port:
    targetPort: 3000-tcp
  to:
    kind: Service
    name: messaging
    weight: 100
  wildcardPolicy: None
---
# Source: manuela-stormshift/templates/anomaly-detection/iot-anomaly-detection-seldon.yaml
apiVersion: machinelearning.seldon.io/v1
kind: SeldonDeployment
metadata:
  name: anomaly-detection
  namespace: manuela-stormshift-messaging
  labels:
    component: serving
  annotations:
    alpha.image.policy.openshift.io/resolve-names: "*"
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  annotations:
    deployment_version: "1"
  name: anomaly-detection
  predictors:
  - annotations:
        predictor_version: "0.1"
    componentSpecs:
    - spec:
        containers:
          - name: anomaly-detection
            image: image-registry.openshift-image-registry.svc:5000/manuela-stormshift-messaging/anomaly-detection:0.3.2
            imagePullPolicy: Always
            env:
            - name: MODEL_FIILE
              value: "model.joblib"
    graph:
      endpoint:
        type: REST
      name: anomaly-detection
      type: MODEL
    name: predictor
    replicas: 1
